---
export const prerender = false;
import {loadScheduleFromContent} from "../../content/loadScheduleFromContent";
import {loadAllCreatorsFromContent} from "../../content/loadCreatorsFromContent";
import {CurrentScheduleLoader} from "../../components/yogs/CurrentScheduleLoader.tsx";

import BaseLayout from "../../layouts/BaseLayout.astro";
import {CreatorPill} from "../../components/creators/CreatorPill.tsx";

const creators = await loadAllCreatorsFromContent();

const yogs = creators.filter(creator => creator.type === 'yogs' || creator.type === 'staff');
const bestOf = creators.filter(creator => creator.type === 'best_of');
const friends = creators.filter(creator => creator.type === 'friend');

const fallbackSchedule = await loadScheduleFromContent('2024')
const filter = Astro.url.searchParams.get('filter') || '';
console.log(filter)
const filterCreators = () => {
  if (filter === '') {
    return null;
  }
  const ids = filter.split(',')
  return creators.filter(creator => ids.includes(creator.id));
}

const filteredCreators = filterCreators();

let description = 'The Yogscast Jingle Jam Schedule 2024'

if (filteredCreators) {
  if (filteredCreators.length === 1) {
    description = `The Yogscast Jingle Jam Schedule 2024 for ${filteredCreators[0].name}`
  } else if (filteredCreators.length <= 3) {
    let nameStr = ''
    const filteredCreatorsLastIndex = filteredCreators.length - 1
    for (let i = 0; i < filteredCreators.length; i++) {
      nameStr += filteredCreators[i].name
      if (i < filteredCreatorsLastIndex - 1) {
        nameStr += ', '
      } else if (i === filteredCreatorsLastIndex - 1) {
        nameStr += ' and '
      }
    }
    description = `The Yogscast Jingle Jam Schedule 2024 for ${nameStr}`
  } else {
    let nameStr = ''
    for (let i = 0; i < 3; i++) {
      nameStr += filteredCreators[i].name
      if (i < 2) {
        nameStr += ', '
      } else {
        nameStr += ' and more'
      }
    }
    description = `The Yogscast Jingle Jam Schedule 2024 for ${nameStr}`
  }
}
---

<style is:global>

    :root {
        --jj-schedule-available-height: max(85vh, 400px);
        --jj-schedule-available-width: min(max(85vw, 600px), 1600px);
        --jj-schedule-w-size: calc(var(--jj-schedule-available-width) / (7 * 3 + 1));
        --jj-schedule-h-size: calc(var(--jj-schedule-available-height) / (5 * 3 + 2));
        --jj-schedule-data-size: max(var(--jj-schedule-w-size), var(--jj-schedule-h-size));
        --jj-schedule-slot-size: calc(var(--jj-schedule-data-size) * 3);
    }

    .timezone {
        width: var(--jj-schedule-data-size);
        height: var(--jj-schedule-data-size);
    }

    .timezone-text {
        font-size: 0.5rem;
        line-height: 0.75rem;
    }

    .schedule-container {
        width: 80vw;
        min-height: 100%;
    }

    .schedule-body {
        width: 100%;
        height: 100%;
    }

    .schedule {
        width: var(--jj-schedule-available-width);
        height: 100%;
    }

    .time {
        width: var(--jj-schedule-data-size);
        height: var(--jj-schedule-slot-size)
    }

    .data-height {
        height: var(--jj-schedule-data-size);
    }

    .data-width {
        width: var(--jj-schedule-data-size);
    }

    .stream-width {
        width: var(--jj-schedule-slot-size);
    }

    .stream-height {
        height: var(--jj-schedule-slot-size);
    }

    .day {
        width: 100%;
        height: var(--jj-schedule-data-size);
    }

    .day-container {
        width: var(--jj-schedule-slot-size);
        height: 100%;
    }

    .header-title-card-width {
        width: calc(var(--jj-schedule-slot-size) * 3);
    }

    @media (max-width: 900px) {
        .desktop-schedule {
            display: none;
        }
    }

    @media (min-width: 901px) {
        .mobile-schedule {
            display: none;
        }
    }
</style>
<BaseLayout
        title="The Yogscast Jingle Jam Schedule 2024"
        description={description}
>
    <div class={'min-h-32'}>
        <CurrentScheduleLoader client:only="solid-js" creators={creators} fallbackSchedule={fallbackSchedule!}/>
    </div>

    <div class="flex flex-col justify-center items-center p-4 gap-2">
        <p class="text-2xl text-white text-center">Yogs & Friends</p>
        <div class="flex flex-col items-center gap-2">
            <p class="text-xl text-white mb-1">Yogs</p>
            <div class="flex flex-wrap gap-2 items-center justify-center">
              {
                yogs && yogs.map(creator =>
                              <CreatorPill creator={creator} client:only="solid-js"/>)
              }
            </div>
            <p class="text-xl text-white mb-1">Best Of</p>
            <div class="flex flex-wrap gap-2 items-center justify-center">
              {
                bestOf && bestOf.map(creator =>
                              <CreatorPill creator={creator} client:only="solid-js"/>
                )
              }
            </div>
            <p class="text-xl text-white mb-1">Friends</p>
            <div class="flex flex-wrap gap-2 items-center justify-center">
              {
                friends && friends.map(creator =>
                              <CreatorPill creator={creator} client:only="solid-js"/>
                )
              }
            </div>
        </div>
    </div>

</BaseLayout>
